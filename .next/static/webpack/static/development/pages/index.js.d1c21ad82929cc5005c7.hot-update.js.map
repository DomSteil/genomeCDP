{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.d1c21ad82929cc5005c7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\r\nimport Head from 'next/head'\r\nimport Web3 from 'web3'\r\nimport IpfsApi from 'ipfs-api'\r\nimport Header from '../components/header'\r\nimport Maker from '@makerdao/dai'\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport StButton from '../components/StButton'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport App from '../components/App';\r\n//import { Drizzle, generateStore } from 'drizzle'\r\n//import { drizzleConnect } from 'drizzle-react'\r\n//import { drizzleConnect } from 'drizzle-react'\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CreateMaker from '../components/CreateMaker';\r\nimport OpenCdp from '../components/OpenCdp';\r\nimport LockGnome from '../components/LockGnome';\r\nimport DrawDai from '../components/DrawDai';\r\nimport WipeDebt from '../components/WipeDebt';\r\nimport ShutCdp from '../components/ShutCdp';\r\nimport Loading from '../components/Loading';\r\nimport StartButton from '../components/StartButton.js';\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nconst { currentProvider: cp } = global.web3\r\nconst isToshi = !!cp.isToshi\r\n\r\n\r\n\r\nstore.subscribe(() =>\r\n  console.log(store.getState())\r\n);\r\n\r\n\r\n// Import contracts\r\nimport GenomeToken from '../build/contracts/GenomeToken.json'\r\n\r\nconst options = {\r\n  contracts: [\r\n    GenomeToken\r\n  ]\r\n}\r\n\r\n//global.drizzleStore = generateStore(this.props.options)\r\n//global.drizzle = new Drizzle(this.props.options, drizzleStore)\r\n\r\n\r\n// MAKER CONSTANTS\r\n\r\nexport const started = () => ({\r\n    type: 'STARTED'\r\n  });\r\n  \r\n  export const makerCreated = () => ({\r\n    type: 'MAKER_CREATED'\r\n  });\r\n  \r\n  export const cdpOpened = () => ({\r\n    type: 'CDP_OPENED'\r\n  });\r\n  \r\n  export const gnomeLocked = () => ({\r\n    type: 'GNOME_LOCKED'\r\n  });\r\n  \r\n  export const daiDrawn = () => ({\r\n    type: 'DAI_DRAWN'\r\n  });\r\n  \r\n  export const daiWiped = () => ({\r\n    type: 'DAI_WIPED'\r\n  });\r\n  \r\n  export const cdpShut = () => ({\r\n    type: 'CDP_SHUT'\r\n  });\r\n  \r\n\r\nglobal.config = {\r\n    rpc: {\r\n      host: \"127.0.0.1\",\r\n      port: \"7545\"\r\n    }\r\n  }\r\n  \r\n  global.web3 = new Web3();\r\n  web3.setProvider(new web3.providers.HttpProvider(`https://${global.config.rpc.host}:${global.config.rpc.port}`));\r\n          if (!web3.isConnected()) {\r\n              console.error(\"Ethereum - no conection to RPC server\");\r\n          } else {\r\n              console.log(\"Connected to Ethereum on Local Machine using Ganache\");\r\n          }\r\n  \r\n  // IPFS Config Globals\r\n  global.ipfs = ipfs;\r\n  global.ipfsHost = 'localhost',\r\n  global.ipfsAPIPort = '5001',\r\n  global.ipfsWebPort = '8080',\r\n  global.ipfsDataHost = \"http://\" + ipfsHost + ':' + ipfsWebPort + \"/ipfs\";\r\n  \r\n  \r\n  var ipfs = IpfsApi(ipfsHost, ipfsAPIPort)\r\n        ipfs.swarm.peers(function(err, response) {\r\n           if (err) {\r\n            console.log(\"not connected to IPFS on AWS\");\r\n           } else {\r\n           console.log(\"Connected to IPFS\");\r\n             //console.log(response);\r\n          }\r\n        });\r\n\r\n\r\nglobal.makerKovan = Maker.create('kovan', {\r\n         privateKey: '0x18fbabbf93480a5e4495cfa6dfeca0b64e8031de4801381a02af6c0828bd71bf',\r\n        provider: {\r\n            infuraApiKey: 'FoggkEz1SP1DzdhkXUr8'\r\n      }\r\n});\r\n\r\n\r\n\r\n\r\nexport default () => (\r\n\t<div>\r\n\t<Head>\r\n      <title>GenomeCDP</title>\r\n      <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\r\n    </Head>\r\n\t<Header />\r\n    <br/>\r\n    <Typography variant=\"display1\" gutterBottom>\r\n        GenomeCDP\r\n      </Typography>\r\n\r\n      <img src=\"/static/genomeCDP.png\"/>\r\n          \r\n          <br /><h1 className=\"App-intro\">Generate loans against your genomic data</h1>\r\n\r\n          <br/>\r\n    \r\n      <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n      Start\r\n    </Button>\r\n    <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n      Open CDP\r\n    </Button>\r\n    <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n      Draw Dai\r\n    </Button>\r\n    <Button variant=\"contained\" color=\"secondary\" size=\"small\">\r\n      Wipe Dai\r\n    </Button>\r\n    <Button variant=\"contained\" color=\"secondary\" size=\"small\">\r\n      Close CDP\r\n    </Button>\r\n\r\n<br/>\r\n<br/>\r\n\r\n<Paper>\r\n<List component=\"nav\">\r\n<ListItem button>\r\n  <ListItemText primary=\"CDP ID: 028\" />\r\n</ListItem>\r\n<Divider light />\r\n<ListItem button>\r\n  <ListItemText primary=\"Collateral: 1 GCPD\" />\r\n</ListItem>\r\n<Divider light />\r\n<ListItem button divider>\r\n  <ListItemText primary=\"Debt: 100\" />\r\n</ListItem>\r\n<Divider light />\r\n<ListItem button divider>\r\n  <ListItemText primary=\"Ratio: 400%\" />\r\n</ListItem>\r\n<Divider light />\r\n<ListItem button>\r\n  <ListItemText primary=\"State: safe\" />\r\n</ListItem>\r\n<Divider light />\r\n<ListItem button>\r\n  <ListItemText primary=\"Last Updated: 1 hour ago\" />\r\n</ListItem>\r\n</List>\r\n</Paper>\r\n\r\n<br/>\r\n<br/>\r\n<br/>\r\n\r\n\r\n\r\n\r\n<style jsx>{`\r\n\r\nmain {\r\n  background-color: ##F8F7F5;\r\n  text-align: center;\r\n}\r\n\r\n  div {\r\n      background-color: ##F8F7F5;\r\n  text-align: center;\r\n      }\r\n\r\n  body {\r\n  background-color: #000;\r\n  text-align: center;\r\n  }\r\n\r\n  b {\r\n    font-weight: normal;\r\n  }\r\n\r\n  .button {\r\n    margin-left: 8px;\r\n    padding-right: 8px;\r\n  }\r\n\r\n  ButtonBase {\r\n    margin-left: 8px;\r\n  }\r\n\r\n  Button {\r\n    margin-left: 8px;\r\n  }\r\n\r\n  h1 {\r\n      font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\r\n      margin: 10px 0;\r\n      font-size: 2em;\r\n      font-weight: 200;\r\n      color: #000;\r\n      text-align: center;\r\n    }\r\n\r\n      h2 {\r\n      font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\r\n      margin: 10px 0;\r\n      font-size: 24px;\r\n      font-weight: normal;\r\n      margin-right: 30px;\r\n      padding-left: 5px;\r\n      color: #000;\r\n      text-align: center;\r\n    }\r\n\r\n    p {\r\n      font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\r\n      margin: 10px 0;\r\n      font-size: 18px;\r\n      margin-right: 30px;\r\n      padding-left: 5px;\r\n      color: #000;\r\n      text-align: center;\r\n    }\r\n\r\n    img {\r\n      font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\r\n      height: 80px;\r\n      width: 80px;\r\n      font-size: 12px;\r\n      text-align: center;\r\n    }\r\n\r\n    ul {\r\n\r\n        display: inline-block;\r\n        color: #999;\r\n        position: absolute;\r\n        margin-left: -15px;\r\n    }\r\n\r\n    .connected {\r\n  content: '';\r\n  width: 8px;\r\n  height: 8px;\r\n  display: inline-block;\r\n  border-radius: 100%;\r\n  background: #50e3c2;\r\n  margin-left: 10px;\r\n}\r\n\r\n.after {\r\n  box-sizing: inherit;\r\n}\r\n\r\n.action {\r\n  padding-left: 8px;\r\n}\r\n\r\ncard: {\r\n  minWidth: 275,\r\n},\r\nbullet: {\r\n  display: 'inline-block',\r\n  margin: '0 2px',\r\n  transform: 'scale(0.8)',\r\n},\r\ntitle: {\r\n  marginBottom: 16,\r\n  fontSize: 14,\r\n},\r\npos: {\r\n  marginBottom: 12,\r\n},\r\n};\r\n\r\n\r\n\r\n\r\n`}</style>\r\n  </div>\r\n\r\n\r\n\r\n  )"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;AACA;AAKA;AAEA;AACA;AAMA;AAGA;AACA;AAXA;AAYA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAKA;AACA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlEA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}